----------The Basics----------
    Name: Twitter_only
    Type: Constraint
    Summary: The application will only be using Twitter, not any other social media application.

    Name: Operating_System
    Type: constraint
    Summary: The specific operating system used is Windows 10/

    Name: Program_Language
    Type: constraint
    Summary: Will only use C# and WPF

    Name: Internet_Connectivity 
    Type: Constraint
    Summary: The application must have a stable internet connection.

    Name: Image_Type
    Type: Constraint
    Summary: This application will save all image files as a '.jpg' file or as '.gif' for animated gifs.


----------Security----------
    Name: Username_Input
    Type: Functional
    Summary: The application must read in a user's username.

    Name: Username_Save
    Type: Functional
    Summary: The user can choose to save their username
    
    Name: Username_Encryption
    Type: Constraint
    Summary: The application will be able to encrypt usernames using a .NET Aes algorithm before saving them

    Name: Name_Decryption
    Type: Constraint
    Summary: The application will be able to decrypt saved usernames
    
    Name: Username_Storage
    Type: Constraint
    Summary: The application will save the user's username in an encrypted format locally on the computer
    
    Name: Password_Input
    Type: Functional
    Summary:The application must read in a user's password.

    Name: Password_Save
    Type: Functional
    Summary: The user can choose to save their password

    Name: Password_Secure
    Type: Risk
    Summary: User's password must be secure and hidden using asterisks.
    
    Name: Password_Encryption
    Type: Constraint
    Summary: The application will be able to encrypt passwords using a .NET Aes algorithm before saving them

    Name: Password_Decryption
    Type: Constraint
    Summary: The application will be able to decrypt saved passwords
    
    Name: Password_Storage
    Type: Constraint
    Summary: The application will save the user's password in an encrypted format locally on the computer


----------Picture Functions----------
    Name: Picture_Select
    Type: Functional
    Summary: The application must be able to select a specific picture to display only.

    Name: Link_Status
    Type: Functional
    Summary: The user will be able to acquire a link to the original status that an image is from.

    Name: Watermark_Create 
    Type: Constraint
    Summary: The application must be able to create a watermark at the bottom corner if images which will specify the user it come from.
    
    Name: Watermark_Add
    Type: Functional
    Summary: The application will be able to add the created watermark onto an image being saved

    Name: Single_Picture_Exit
    Type: Functional
    Summary: The application must be able exit out of a selected picture to go back to the gallery.    

    Name: Show_Image_Text
    Type: Functional
    Summary: The application must be able to show text associated with the picture via clicking a button. The text must not be shown before such a time. This button will also close the text when clicked again.


----------Download----------
    Name: Download_Picture
    Type: Functional
    Summary: The user will be able to download a picture from a given gallery.

    Name: Download_Mark
    Type: Functional
    Summary: The user will be able to mark multiple images to be downloaded at once

    Name: Download_Multiple
    Type: Functional
    Summary: The application must be able to download multiple images for download all at once.

    Name: Download_All_Album
    Type: Functional
    Summary: The user will be able to download all pictures from an album.


----------Sort----------   
    Name: Sortby_Following
    Type: Functional
    Summary: The user will be able to view a gallery of images by accounts that they are following
    
    Name: Sortby_Liked
    Type: Functional
    Summary: The user will be able to view a gallery of images that they have liked
    
    Name: Sortby_Hashtag
    Type: Functional
    Summary: The user will be able to view a gallery of images that are marked with a certain hashtag
    
    Name: Sortby_User
    Type: Functional
    Summary: The user will be able to view a gallery of images that have been posted by any particular account
    
    Name: Sortby_List
    Type: Functional
    Sumamry: The user will be able to view a gallery of images by accounts that are aggregated into a Twitter list.
    
----------Filter----------

    Name: Filtering
    Type: Functional
    Summary: The user will be able to add content to a filter list so that it will not show up in any feed
    
    Name: Filter_Window
    Type: Functional
    Summary: The user will be able to add or subtract an item to the filter list via a pop up window
    
    Name: Filter_Textbox
    Type: Functional
    Summary: The user will enter the content to be added or removed from the filter into a textbox in the filter window
    
    Name: Filter_AddorSubtract
    Type: Functional
    Summary: The user will select whether they are adding or subtracting an item with a dropdown box in the filter window
    
    Name: Filter_Type
    Type: Functional
    Summary: The user will select what type of content this filter will apply to with a dropdown box in the filter window
    
    Name: Filter_StatusText
    Type: Constraint
    Summary: The application will support filtering images with statuses that contain text from a filter list
    
    Name: Filter_Hashtag
    Type: Constraint
    Summary: The application will support filtering images marked with hashtags from a filter list
    
    Name: Filter_User
    Type: Constraint
    Summary: The application will support filtering all images posted by users from a filter list


----------API----------
    Name: Twitter_API
    Type: Risk
    Summary: The application must be able to connect to the Twitter API.
    
    Name: API_Media
    Type: Constraint
    Summary: The application must be able to retrieve media from the Twitter API
    
    Name: API_Following
    Type: Constraint
    Summary: The application must be able to retrieve account IDs that a user is following from the Twitter API
    
    Name: API_List
    Type: Constraint
    Summary: The application must be able to retrieve user created lists from the Twitter API
    
    Name: API_Like
    Type: Constraint
    Summary: The application must be able to retrieve statuses that an account has liked from the Twitter API

    Name: API_Status
    Type: Constraint
    Summary: The application must be able to retrieve statuses from the Twitter API
    
    Name: API_Search
    Type: Constraint
    Summary: The application must be able to receive the results from a Twitter search
    

----------Graphical Design----------
    Name: Login_Page
    Type: Functional
    Summary: Allows the application to let user enter Twitter login credentials.
    
    Name: Password_As_Asterisks
    Type: Nonfunctional
    Summary: The password field will display all characters as asterisks
    
    Name: Remember_Username
    Type: Functional
    Summary: Checkbox that allows the application to save the user's username
    
    Name: Remember_Password
    Type: Functional
    Summary: Checkbox that allows the application to save the user's password
    
    Name: Saved_Username
    Type: Functional
    Summary: If the application has a saved username then it will have it pretyped into the Username field
    
    Name: Saved_Password
    Type: Functional
    Summary: If the application has a saved password then it will display 5 asterisks in the password field.

    Name: Gallery_Display
    Type: Functional
    Summary: The user will be able to view images in a gallery view.

    Name: User_Feed_Display
    Type: Functional
    Summary: The application will show the Twitter accounts the user follows.

    Name: Search_Button
    Type: Functional
    Summary: Allows the application to search for a specified user.

    Name: Search_Box
    Type: Functional
    Summary: Allows the application to enter in a Twitter account's username to search for a specified user.
    
    Name: Search_Results
    Type: Functional
    Summary: The application will display a page of user profiles based on the search
    
    Name: Select_Profile
    Type: Functional
    Summary: Clicking on a profile from the search results page will take the user to that profile's gallery

    Name: Default#_Of_Pictures_Display
    Type: Functional
    Summary: Application will have a default number of pictures displayed.

    Name: Num_Of_Pics_Display_Drop-DownMenu
    Type: Functional
    Summary: Application will let the user be able to modify the number of pics displayed.

    Name: Nextpage_Button
    Type: Functional
    Summary: Allows the application to go to the next page of images.

    Name: Picture_Drop-DownMenu 
    Type: Functional
    Summary: This menu offers the picture to be added to an album.

    Name: Window_Display 
    Type: Constraint
    Summary: The application must adjust to the size of the window screen.

    Name: Album_Tab
    Type: Functional
    Summary: This tab is where the albums reside.

----------Albums----------
    Name: Album_Create
    Type: Functional
    Summary: The user will be able to create an album for saved pictures.

    Name: Album_Save
    Type: Functional
    Summary: The user will be able to create be able to save specified pictures in the album.
    
    Name: Album_SaveAll
    Type: Functional
    Summary: The user will be able to save all images from an album at once
